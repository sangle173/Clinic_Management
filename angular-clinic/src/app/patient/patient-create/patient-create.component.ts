import {Component, OnInit} from '@angular/core';
import {FormControl, FormGroup} from '@angular/forms';
import {PatientService} from '../../service/patient.service';
import Swal from 'sweetalert2';
import {Router} from '@angular/router';

const DAILOC = ['ƒê·∫†I AN', '√ÅI NGHƒ®A', 'DUY H√íA', 'DUY CH√ÇU', 'DUY XUY√äN', 'ƒê·∫†I CH√ÅNH', 'ƒê·∫†I C∆Ø·ªúNG', 'ƒê·∫†I ƒê·ªíNG', 'ƒê·∫†I HI·ªÜP', 'ƒê·∫†I H√íA', 'ƒê·∫†I H·ªíNG', 'ƒê·∫†I H∆ØNG', 'ƒê·∫†I L√ÉNH', 'ƒê·∫†I MINH', 'ƒê·∫†I NGHƒ®A', 'ƒê·∫†I PHONG', 'ƒê·∫†I QUANG', 'ƒê·∫†I S∆†N', 'ƒê·∫†I T√ÇN', 'ƒê·∫†I TH·∫ÆNG', 'ƒê·∫†I TH·∫†NH', 'ƒê√Ä N·∫¥NG', 'S√ÄI G√íN', 'KH√ÅC'];
const MONTH = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];
const YEAR = ['2022', '2021', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007'];

@Component({
  selector: 'app-patient-create',
  templateUrl: './patient-create.component.html',
  styleUrls: ['./patient-create.component.css']
})
export class PatientCreateComponent implements OnInit {
  createForm: FormGroup;
  addressList = DAILOC;
  monthList = MONTH;
  yearList = YEAR;

  constructor(private patientService: PatientService,
              private route: Router
  ) {
  }

  ngOnInit(): void {
    this.createForm = new FormGroup({
      name: new FormControl(''),
      gender: new FormControl('Nam'),
      phoneNumber: new FormControl(''),
      monthOfBirth: new FormControl(MONTH[0]),
      yearOfBirth: new FormControl(YEAR[0]),
      address: new FormControl(''),
      weight: new FormControl(0),
      height: new FormControl(0)
    });
  }

  submit() {
    const patient = this.createForm.value;
    this.patientService.savePatient(patient).subscribe(data => {
      this.route.navigateByUrl(`/histories/new/${data.id}`);
    }, () => {
      this.showError();
    }, () => {
    });
  }

  showSuccess() {
    Swal.fire({
      position: 'top-end',
      icon: 'success',
      title: 'L∆∞u th√†nh c√¥ngü§£ü§£ü§£',
      showConfirmButton: false,
      timer: 1500
    });
  }

  showDeleteSuccess() {
    Swal.fire({
      position: 'top-end',
      icon: 'success',
      title: 'X√≥a th√†nh c√¥ngüëçüëçüëç',
      showConfirmButton: false,
      timer: 1500
    });
  }

  showError() {
    Swal.fire({
      text: 'Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu t·ª´ h·ªá th·ªëng !',
      icon: 'warning',
      confirmButtonText: 'ƒê√≥ng'
    });
  }

  showErrorSearch() {
    Swal.fire({
      text: 'Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng !',
      icon: 'warning',
      confirmButtonText: 'ƒê√≥ng'
    });
  }

  showErrorDelete() {
    Swal.fire({
      text: 'Kh√¥ng th·ªÉ x√≥a ng∆∞·ªùi d√πng !',
      icon: 'warning',
      confirmButtonText: 'ƒê√≥ng'
    });
  }
}
